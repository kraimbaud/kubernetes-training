---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: volume-1
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/data/vol-1

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: volume-2
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/data/vol-2

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: volume-3
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/data/vol-3

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
  namespace: n3
spec:
  serviceName: "mysql"
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.6
          name: mysql
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: db_name
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: db_user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "mysql"
                  key: db_password
            - name: MYSQL_RANDOM_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: db_random_root_password
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: pvc-mysql

  volumeClaimTemplates:
    - metadata:
        name: pvc-mysql
        namespace: n3
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql
  namespace: n3
spec:
  ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    app: mysql
  type: None

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wordpress
  name: wordpress
  namespace: n3
spec:
  ports:
    - nodePort: 30999
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: wordpress
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
  namespace: n3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - image: wordpress
          name: wordpress
          env:
            - name: WORDPRESS_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: db_host
            - name: WORDPRESS_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: db_user
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "mysql"
                  key: db_password
            - name: WORDPRESS_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: db_name
            - name: WORDPRESS_TABLE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: "wordpress-mysql"
                  key: wordpress_db_prefix
          ports:
            - containerPort: 80
              protocol: TCP

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql
  namespace: n3
type: Opaque
data:
  db_password: MTIzNA==

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-mysql
  namespace: n3
data:
  db_host: "mysql"
  db_user: "admin"
  db_random_root_password: "1"
  db_name: "wordpress"
  wordpress_db_prefix: "wp_"
